{"version":3,"sources":["CircleScroll.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"..\\..\\..\\..\\assets\\Scripts","sourcesContent":["\r\n\r\nconst { ccclass, property } = cc._decorator;\r\nconst TYPES = cc.Enum({\r\n    SIN: 0, //SIN曲线\r\n    CIRCLE: 1,//圆形\r\n})\r\n\r\n@ccclass\r\nexport default class CircleScroll extends cc.ScrollView {\r\n\r\n    @property({\r\n        type: TYPES,\r\n    })\r\n    type: number = 0;\r\n    @property({\r\n        type: cc.Integer\r\n    })\r\n    radius: number = 200;\r\n\r\n    maxOffset: number;\r\n\r\n    anglePer: number;\r\n\r\n    start() {\r\n        if (this.type == TYPES.CIRCLE) {\r\n            this.node.anchorY = 0.5;\r\n            this.content.getComponent(cc.Layout).enabled = false;\r\n        }\r\n        if (this.type == TYPES.SIN) {\r\n            this.node.anchorY = 1;\r\n        }\r\n        this.node.on('scrolling', e => {\r\n            this.resetX();\r\n        });\r\n        this.maxOffset = this.getMaxScrollOffset().y;\r\n        this.anglePer = 2 * Math.PI / this.content.children.length;\r\n        this.resetX();\r\n\r\n    }\r\n    resetX() {\r\n        switch (this.type) {\r\n            case TYPES.SIN:\r\n                this.content.children.forEach((c, i) => {\r\n                    let y = this.node.convertToNodeSpaceAR(c.convertToWorldSpaceAR(cc.v2(0, 0))).y;\r\n                    let pi: number = Math.PI * -(y) / this.node.height;\r\n                    let x = Math.sin(pi);\r\n                    c.x = x * this.radius;\r\n                })\r\n                break;\r\n            case TYPES.CIRCLE:\r\n\r\n                this.content.children.forEach((c, i) => {\r\n                    let offset = this.getScrollOffset();//this.node.convertToNodeSpaceAR(c.convertToWorldSpaceAR(cc.v2(0, 0))).y;\r\n                    //将offsety 转换为角度\r\n                    let ang = (2 * Math.PI) * offset.y / this.maxOffset + this.anglePer * i;\r\n                    c.x = this.radius * Math.cos(ang);\r\n                    c.y = this.radius * Math.sin(ang) - offset.y ;\r\n                })\r\n                break;\r\n        }\r\n\r\n    }\r\n    update(dt) {\r\n        super.update(dt);\r\n    }\r\n}\r\n"]}